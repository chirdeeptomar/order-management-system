version: "3"
name: trading-infra
networks:
    trading_network:
        driver: bridge
volumes:
    redpanda: null
services:
    timebase:
        image: "finos/timebase-ce-server:6.1.21"
        stop_grace_period: 5m
        ulimits:
            nofile:
                soft: 65536
                hard: 65536
        environment:
            - JAVA_OPTS=
              -Xms8g
              -Xmx8g
              -XX:+HeapDumpOnOutOfMemoryError
              -XX:HeapDumpPath=/timebase-home/timebase.hprof
              -Xlog:gc=debug:file=/timebase-home/GClog-TimeBase.log:time,uptime,level,tags:filecount=5,filesize=100m
        ports:
            - 8011:8011
        volumes:
            - "./timebase-home:/timebase-home"
        networks:
            - trading_network

    timebase-admin:
        image: "epam/timebase-ws-server:1.1.2"
        environment:
            - JAVA_OPTS=
              -Xmx1g
              -Dserver.port=8099
              -Dtimebase.url=dxtick://timebase:8011
              -Dserver.compression.enabled=true
              -Dserver.compression.mime-types=text/html,text/css,application/javascript,application/json
        ports:
            - 8099:8099
        depends_on:
            - timebase
        networks:
            - trading_network

    redpanda:
        image: docker.redpanda.com/redpandadata/redpanda:v23.3.5
        command:
            - redpanda start
            - --smp 1
            - --overprovisioned
            - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
            # Address the broker advertises to clients that connect to the Kafka API.
            # Use the internal addresses to connect to the Redpanda brokers
            # from inside the same Docker network.
            # Use the external addresses to connect to the Redpanda brokers
            # from outside the Docker network.
            - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
            - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
            # Address the broker advertises to clients that connect to the HTTP Proxy.
            - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
            - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
            # Redpanda brokers use the RPC API to communicate with each other internally.
            - --rpc-addr redpanda:33145
            - --advertise-rpc-addr redpanda:33145
            - --mode dev-container
        ports:
            - 18081:18081
            - 18082:18082
            - 19092:19092
            - 19644:9644
        volumes:
            - redpanda:/var/lib/redpanda/data
        networks:
            - trading_network
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "rpk cluster health | grep -E 'Healthy:.+true' || exit 1",
                ]
            interval: 15s
            timeout: 3s
            retries: 5
            start_period: 5s
    console:
        image: docker.redpanda.com/redpandadata/console:v2.4.3
        entrypoint: /bin/sh
        command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
        environment:
            CONFIG_FILEPATH: /tmp/config.yml
            CONSOLE_CONFIG_FILE: |
                kafka:
                    brokers: ["redpanda:9092"]
                    schemaRegistry:
                        enabled: true
                        urls: ["http://redpanda:8081"]
                redpanda:
                    adminApi:
                        enabled: true
                        urls: ["http://redpanda:9644"]
                connect:
                    enabled: true
                    clusters:
                        name: local-connect-cluster
                        url: http://connect:8083
        ports:
            - 8080:8080
        networks:
            - trading_network
        depends_on:
            - redpanda
    connect:
        image: docker.redpanda.com/redpandadata/connectors:latest
        hostname: connect
        container_name: connect
        networks:
            - trading_network
        # platform: 'linux/amd64'
        depends_on:
            - redpanda
        ports:
            - "8083:8083"
        environment:
            CONNECT_CONFIGURATION: |
                key.converter=org.apache.kafka.connect.converters.ByteArrayConverter
                value.converter=org.apache.kafka.connect.converters.ByteArrayConverter
                group.id=connectors-cluster
                offset.storage.topic=_internal_connectors_offsets
                config.storage.topic=_internal_connectors_configs
                status.storage.topic=_internal_connectors_status
                config.storage.replication.factor=-1
                offset.storage.replication.factor=-1
                status.storage.replication.factor=-1
                offset.flush.interval.ms=1000
                producer.linger.ms=50
                producer.batch.size=131072
            CONNECT_BOOTSTRAP_SERVERS: redpanda:9092
            CONNECT_GC_LOG_ENABLED: "false"
            CONNECT_HEAP_OPTS: -Xms512M -Xmx512M
            CONNECT_LOG_LEVEL: info
